[
    {
        "id": "eb4a5a9.53945a8",
        "type": "tab",
        "label": "Get Response Test"
    },
    {
        "id": "fe41d47b.5b5188",
        "type": "http in",
        "z": "eb4a5a9.53945a8",
        "name": "Simple",
        "url": "/hello",
        "method": "get",
        "swaggerDoc": "",
        "x": 142.00004768371582,
        "y": 461.0000457763672,
        "wires": [
            [
                "fa315cf6.3ec6b8"
            ]
        ]
    },
    {
        "id": "fa315cf6.3ec6b8",
        "type": "function",
        "z": "eb4a5a9.53945a8",
        "name": "Hello",
        "func": "msg.payload = \"world\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 286.0000457763672,
        "y": 461.0000457763672,
        "wires": [
            [
                "d25b790e.38008"
            ]
        ]
    },
    {
        "id": "d25b790e.38008",
        "type": "http response",
        "z": "eb4a5a9.53945a8",
        "name": "world test",
        "x": 461.0000457763672,
        "y": 460.0000457763672,
        "wires": []
    },
    {
        "id": "d8acf450.06d108",
        "type": "http in",
        "z": "eb4a5a9.53945a8",
        "name": "",
        "url": "/soapuiproject",
        "method": "post",
        "swaggerDoc": "",
        "x": 130.88333892822266,
        "y": 206.39999389648438,
        "wires": [
            [
                "4c24cc6d.66b864"
            ]
        ]
    },
    {
        "id": "f68ac966.42f4e8",
        "type": "exec",
        "z": "eb4a5a9.53945a8",
        "command": "/home/nodered/process.py",
        "addpay": true,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "execute tests",
        "x": 753.7666435241699,
        "y": 305.89994049072266,
        "wires": [
            [
                "26139f39.c591c8",
                "c8dda829.d20fc8"
            ],
            [
                "d95ea83f.27e9e"
            ],
            [
                "92c18703.2595d"
            ]
        ]
    },
    {
        "id": "b300c455.53875",
        "type": "http response",
        "z": "eb4a5a9.53945a8",
        "name": "respond with results",
        "x": 1166.766616821289,
        "y": 80.39999580383301,
        "wires": []
    },
    {
        "id": "6ef621f9.9a234",
        "type": "function",
        "z": "eb4a5a9.53945a8",
        "name": "append header vars",
        "func": "var pl = msg.payload;\n//append the endpoint for later extraction\nvar endpoint = \"null\"\nif (msg.req.headers.hasOwnProperty('endpoint')) {\n    endpoint = msg.req.headers.endpoint;\n}\npl += \"*\";\npl += endpoint;\nmsg.payload = pl;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 501.6499328613281,
        "y": 199,
        "wires": [
            [
                "f68ac966.42f4e8",
                "2a347228.a63706"
            ]
        ]
    },
    {
        "id": "4c24cc6d.66b864",
        "type": "function",
        "z": "eb4a5a9.53945a8",
        "name": "wait4it",
        "func": "msg.waitcount = msg.waitcount || 0;\nmsg.topic = msg._msgid;\n\nif (flow.get('count') === flow.get('id')) {\n    flow.set('id', flow.get('id') + 1);\n\treturn [msg, null];\n} else if (msg.waitcount > 60) {\n    node.warn(\"Message buffer timeout, purging 1 request\");\n    return [null,null];\n} else {\n    //node.warn(msg.waitcount + \":\" + msg._msgid + \" waiting for id \" + flow.get('id') + \" to equal count \" + flow.get('count'))\n    msg.waitcount += 1;\n    return [null, msg];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 319.6500015258789,
        "y": 204.9166717529297,
        "wires": [
            [
                "6ef621f9.9a234"
            ],
            [
                "85609be7.1b36e"
            ]
        ]
    },
    {
        "id": "85609be7.1b36e",
        "type": "delay",
        "z": "eb4a5a9.53945a8",
        "name": "release 1 msg/sec",
        "pauseType": "queue",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 324.65000915527344,
        "y": 326.54999256134033,
        "wires": [
            [
                "4c24cc6d.66b864"
            ]
        ]
    },
    {
        "id": "e0992b9d.7bb5e8",
        "type": "base64",
        "z": "eb4a5a9.53945a8",
        "name": "",
        "x": 966.8833312988281,
        "y": 79.51666450500488,
        "wires": [
            [
                "b300c455.53875",
                "e1ca74ef.655c88"
            ]
        ]
    },
    {
        "id": "2a347228.a63706",
        "type": "debug",
        "z": "eb4a5a9.53945a8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 557.7666625976562,
        "y": 321.2500057220459,
        "wires": []
    },
    {
        "id": "d95ea83f.27e9e",
        "type": "debug",
        "z": "eb4a5a9.53945a8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1020.7667083740234,
        "y": 415.25006103515625,
        "wires": []
    },
    {
        "id": "bae3f115.aa5f3",
        "type": "function",
        "z": "eb4a5a9.53945a8",
        "name": "allow next request",
        "func": "flow.set('count', flow.get('count') + 1);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190.8833045959473,
        "y": 181.88336181640625,
        "wires": [
            []
        ]
    },
    {
        "id": "9f3c71ec.036898",
        "type": "function",
        "z": "eb4a5a9.53945a8",
        "name": "set flow vars",
        "func": "flow.set('count', 0);\nflow.set('id', 0);",
        "outputs": 1,
        "noerr": 0,
        "x": 342.88333892822266,
        "y": 92.88333129882812,
        "wires": [
            []
        ]
    },
    {
        "id": "5cbe47fb.20a24",
        "type": "inject",
        "z": "eb4a5a9.53945a8",
        "name": "startup init",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 169.48334503173828,
        "y": 93.86666870117188,
        "wires": [
            [
                "9f3c71ec.036898"
            ]
        ]
    },
    {
        "id": "3e27f81c.70c28",
        "type": "file in",
        "z": "eb4a5a9.53945a8",
        "name": "read report",
        "filename": "/tmp/test_case_run_log_report.xml",
        "format": "utf8",
        "x": 783.8833770751953,
        "y": 79.88333320617676,
        "wires": [
            [
                "e0992b9d.7bb5e8"
            ]
        ]
    },
    {
        "id": "26139f39.c591c8",
        "type": "function",
        "z": "eb4a5a9.53945a8",
        "name": "check payload",
        "func": "if (msg.payload === \"\") {\n    msg.payload = \"No output from testrunner - aborting\";\n    node.warn(msg.payload);\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 750.7667694091797,
        "y": 193.66669464111328,
        "wires": [
            [
                "3e27f81c.70c28"
            ],
            [
                "e0992b9d.7bb5e8"
            ]
        ]
    },
    {
        "id": "92c18703.2595d",
        "type": "debug",
        "z": "eb4a5a9.53945a8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 984.7666625976562,
        "y": 483.8999195098877,
        "wires": []
    },
    {
        "id": "e1ca74ef.655c88",
        "type": "exec",
        "z": "eb4a5a9.53945a8",
        "command": "rm -f /tmp/test_case_run_log_report.xml",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "del report",
        "x": 1011.3668670654297,
        "y": 194.25000762939453,
        "wires": [
            [
                "bae3f115.aa5f3"
            ],
            [],
            []
        ]
    },
    {
        "id": "c8dda829.d20fc8",
        "type": "debug",
        "z": "eb4a5a9.53945a8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1029.3667449951172,
        "y": 345.2500286102295,
        "wires": []
    }
]
